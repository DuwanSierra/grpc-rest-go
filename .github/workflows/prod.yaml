name: gRPC Demo
run-name: ${{ github.actor }} deploy gRPC demo in Azure Cloud ðŸš€
# this workflow is triggered on push or pull request events but only for the main branch
on:
  push:
    branches: [ main ]
jobs:
  build-all-projects:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      # install dependencies and build with gradle
      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Cache builds
        uses: actions/cache@v3
        with:
          path: |
            ./microservicea/build
            ./microserviceb/build
          key: ${{ runner.os }}-builds

      - name: Install dependencies
        run: ./gradlew build

  build-docker-images:
    runs-on: ubuntu-latest
    needs: build-all-projects
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      - name: Cache builds
        uses: actions/cache@v3
        with:
          path: |
            ./microservicea/build
            ./microserviceb/build
          key: ${{ runner.os }}-builds

      # add docker GitHub action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image Microservice A
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/microservicea:latest . -f ./microservicea/Dockerfile

      - name: Build Docker image Microservice B
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/microserviceb:latest . -f ./microserviceb/Dockerfile

      # login to the Docker Hub registry
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      # push the Docker images to the Docker Hub registry
      - name: Push Docker image Microservice A
        run: docker push ${{ secrets.DOCKER_USERNAME }}/microservicea:latest
      - name: Push Docker image Microservice B
        run: docker push ${{ secrets.DOCKER_USERNAME }}/microserviceb:latest

  deploy-microservicea:
    runs-on: ubuntu-latest
    needs: build-docker-images
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      # Copy docker-compose.yaml file to VM1
      - name: Copy Docker Compose file to VM1
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST_VM1 }}
          username: ${{ secrets.USERNAME_VM1 }}
          password: ${{ secrets.PASSWORD_VM1 }}
          port: 22
          source: ./docker-compose-files/VM1/docker-compose.yaml
          target: docker-compose-files
          overwrite: true
          rm: true

      # Connect to VM1 and run docker commands
      - name: Deploy Docker image in VM1
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST_VM1 }}
          username: ${{ secrets.USERNAME_VM1 }}
          password: ${{ secrets.PASSWORD_VM1 }}
          port: 22
          # Set environment variables from secrets and save in .env file
          # run command to stop all containers with the same name
          # run command to pull the latest image from Docker Hub
          # and run the container expose port 8080 and 9090
          script: |
              cd /docker-compose-files
              echo "VM1_REST_IP_PORT=${{ secrets.VM1_REST_IP_PORT }}" >> .env
              echo "VM1_GRPC_IP_PORT=${{ secrets.VM1_GRPC_IP_PORT }}" >> .env
              docker-compose down
              docker-compose pull
              docker-compose up -d
          


